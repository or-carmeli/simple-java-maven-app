name: Push to Development Pipeline

on:
  push:
    branches:
      - development
      
jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Fetch latest changes
        run: git fetch --tags

      - name: Bump version and push tag
        id: tag_action
        uses: anothrNick/github-tag-action@1.64.0
        env:   
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch
          INITIAL_VERSION: 1.0.0
      
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      #- name: Test
       # run: mvn test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and run the container
        id: build
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/simple-java-maven-app:${{ steps.tag_action.outputs.new_tag }} .
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/simple-java-maven-app:${{ steps.tag_action.outputs.new_tag }} ${{ secrets.DOCKERHUB_USERNAME }}/simple-java-maven-app:latest
          docker run --name simple-java-maven-app ${{ secrets.DOCKERHUB_USERNAME }}/simple-java-maven-app:${{ steps.tag_action.outputs.new_tag }}
              
      - name: Check output
        id: check_output
        run: |
          output=$(docker logs simple-java-maven-app)
          if [[ "$output" != "Hello World!" ]]; then
            exit 1
          fi

      - name: Push to Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/simple-java-maven-app:${{ steps.tag_action.outputs.new_tag }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/simple-java-maven-app:latest

      - name: Increase pom.xml version
        run: mvn versions:set -DnewVersion=$(echo $(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec) | awk -F. -v OFS=. '{$3++; print}')

      - name: Pull latest changes
        run: git pull origin development

      - name: Push pom.xml
        run: |
          git config user.name "or-carmeli"
          git config user.email "ocarmeli7@gmail.com"
          git add pom.xml
          git commit -m "Increase pom.xml version"
          git push origin development

      - name: Create Pull Request
        uses: repo-sync/pull-request@v2
        with:
          destination_branch: "master"
          github_token: ${{ secrets.GITHUB_TOKEN }}
